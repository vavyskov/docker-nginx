server {

    ## https://www.nginx.com/resources/wiki/start/topics/recipes/drupal/
    ## https://medium.com/@callback.insanity/series-part-iv-optimizing-nginx-for-drupal-8-x-and-php-7-x-976b541f3768

    #listen 80;
    listen 80 default_server;
    listen [::]:80 default_server ipv6only=on;

    #listen 443 ssl;
    #fastcgi_param HTTPS on;
    #
    #ssl_certificate /etc/ssl/server.pem;
    #ssl_certificate_key /etc/ssl/server.key;
    #ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;

    server_name localhost;
    root ${NGINX_ROOT};
    index index.php index.html index.htm;

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # Very rarely should these ever be accessed outside of your lan
    #location ~* \.(txt|log)$ {
    #    allow 192.168.0.0/16;
    #    deny all;
    #}

    location ~ \..*/.*\.php$ {
        return 403;
    }

    location ~ ^/sites/.*/private/ {
        return 403;
    }

    # Block access to scripts in site files directory
    location ~ ^/sites/[^/]+/files/.*\.php$ {
        deny all;
    }

    # Allow "Well-Known URIs" as per RFC 5785
    location ~* ^/.well-known/ {
        allow all;
    }

    # Block access to "hidden" files and directories whose names begin with a
    # period. This includes directories used by version control systems such
    # as Subversion or Git to store control files.
    location ~ (^|/)\. {
        return 403;
    }

    location / {
        try_files $uri /index.php?$query_string;
        #root /usr/share/nginx/html;
        #index index.html index.htm;
        #try_files $uri $uri/ /index.php$is_args$args;
        #try_files $uri @rewrite;
    }

    location @rewrite {
        rewrite ^/(.*)$ /index.php?q=$1;
    }

    # Don't allow direct access to PHP files in the vendor directory.
    location ~ /vendor/.*\.php$ {
        deny all;
        return 404;
    }

    ## Pass the PHP scripts to FastCGI server (listening on 127.0.0.1:9000)
    #location ~ \.php$ {
    ## Changed for Drupal URL /update.php/selection
    location ~ '\.php$|^/update.php' {
    #location ~ '\.php$|^\/update.php' {
        fastcgi_split_path_info ^(.+?\.php)(|/.*)$;

        # Ensure the php file exists. Mitigates CVE-2019-11043
        try_files $fastcgi_script_name =404;

        # Security note: If you're running a version of PHP older than the
        # latest 5.3, you should have "cgi.fix_pathinfo = 0;" in php.ini.
        # See http://serverfault.com/q/627903/94922 for details.
        include fastcgi_params;

        # Block httpoxy attacks. See https://httpoxy.org/.
        fastcgi_param HTTP_PROXY "";
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        #fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param QUERY_STRING $query_string;
        #fastcgi_param PHP_VALUE "max_execution_time=300";
        fastcgi_intercept_errors on;

        # PHP 7 socket location.
        #fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
        ## 127.0.0.1:9000 | php-fpm:9000 | php-upstream (custom default server name)
        fastcgi_pass ${NGINX_FASTCGI_HOSTNAME}:${NGINX_FASTCGI_PORT};

#        #root html;
#
#        ## Disabled for Drupal URL /update.php/selection
#        #try_files $uri /index.php =404;
#        #try_files  $uri =404;
#
#        # This is INCORRECT, this line redirects update.php/selection into Nginx 404 page.
#        # Ensure the php file exists. Mitigates CVE-2019-11043
#        # try_files $uri =404;
#
#        fastcgi_index index.php;
#        fastcgi_buffers 16 16k;
#        fastcgi_buffer_size 32k;
#
#        #fixes timeouts
#        fastcgi_read_timeout 600;
#        #fastcgi_read_timeout 3d;
#
#        fastcgi_send_timeout 300s;
    }

    # Fighting with Styles? This little gem is amazing.
    location ~ ^/sites/.*/files/styles/ {
    #location ~ ^(/[a-z\-]+)?/sites/.*/files/styles/ {
        try_files $uri @rewrite;
    }

    # Handle private files through Drupal. Private file's path can come
    # with a language prefix.
    location ~ ^(/[a-z\-]+)?/system/files/ {
        try_files $uri /index.php?$query_string;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
    #location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml|js|htm|html)$ {
        try_files $uri @rewrite;
        expires max;
        #expires 360d;
        log_not_found off;
    }

    # Enforce clean URLs
    # Removes index.php from urls like www.example.com/index.php/my-page --> www.example.com/my-page
    # Could be done with 301 for permanent or other redirect codes.
    if ($request_uri ~* "^(.*/)index\.php(.*)") {
        return 307 $1$2;
    }

    ## Drupal (module/theme instalation from URL)
    ## https://www.drupal.org/project/drupal/issues/2583799
    rewrite ^/core/authorize.php/core/authorize.php(.*)$ /core/authorize.php$1;

#    location ~* \.(ttf|otf|eot)$ {
#        add_header Access-Control-Allow-Origin "*";
#    }
#
#    #charset koi8-r;
#
#    access_log /var/log/nginx/host.access.log main;
#    access_log /var/log/nginx/app_access.log;
#
#    error_log /var/log/nginx/app_error.log;
#
#    #error_page  404  /404.html;
#
#    ## Redirect server error pages to the static page /50x.html
#    #
#    #error_page   500 502 503 504  /50x.html;
#    #location = /50x.html {
#    #    root   /usr/share/nginx/html;
#    #}
#
#    location ~ /\. {
#        access_log off;
#        log_not_found off;
#        deny all;
#    }
#
#    ## Deny access to .htaccess files, if Apache's document root
#    ## concurs with nginx's one
#    location ~ /\.ht {
#        deny all;
#    }
#
#    location /.well-known/acme-challenge/ {
#        root /var/www/letsencrypt/;
#        log_not_found off;
#    }
#
#    # Block access to scripts in site files directory
#    location ~ ^/sites/[^/]+/files/.*\.php$ {
#        deny all;
#    }
#
#    ## Allow requests to take longer.
#    #proxy_read_timeout 3d;

}
